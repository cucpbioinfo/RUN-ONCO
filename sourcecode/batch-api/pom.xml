<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>run.onco.batch</groupId>
	<artifactId>batch-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>batch-api</name>
	<description>BATCH API : Batch Module</description>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
	</parent>

	<properties>
		<!-- Generic properties -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<resource.directory>src/main/resources</resource.directory>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>

		<hibernate.version>5.2.10.Final</hibernate.version>
		<slfj.version>1.7.5</slfj.version>
		<springframework.version>4.3.8.RELEASE</springframework.version>
		<jackson.library>2.9.10.5</jackson.library>
		<aspectj.version>1.8.6</aspectj.version>
		<jjwt.version>0.9.0</jjwt.version>
		<quartz-scheduler.version>2.2.3</quartz-scheduler.version>
		<swagger.version>2.9.2</swagger.version>
		<dl4j.version>0.9.1</dl4j.version>
		<canova.version>0.9.1</canova.version>
		<onco-api-common.version>0.0.1-SNAPSHOT</onco-api-common.version>
		<onco-api-service.version>0.0.1-SNAPSHOT</onco-api-service.version>
		<onco-api-mongo.version>0.0.1-SNAPSHOT</onco-api-mongo.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>run.onco.api.common</groupId>
			<artifactId>onco-api-common</artifactId>
			<version>${onco-api-common.version}</version>
		</dependency>
		<dependency>
			<groupId>run.onco.api.service</groupId>
			<artifactId>onco-api-service</artifactId>
			<version>${onco-api-service.version}</version>
		</dependency>
		<dependency>
			<groupId>run.onco.api.mongo</groupId>
			<artifactId>onco-api-mongo</artifactId>
			<version>${onco-api-mongo.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.library}</version>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt-spring31</artifactId>
			<version>1.9.2</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- spring AOP and AspectJ -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slfj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slfj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slfj.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.0.Final</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
	        <groupId>org.quartz-scheduler</groupId>
	        <artifactId>quartz</artifactId>
	        <version>${quartz-scheduler.version}</version>
	    </dependency>
	    <dependency>
	        <groupId>org.quartz-scheduler</groupId>
	        <artifactId>quartz-jobs</artifactId>
	        <version>${quartz-scheduler.version}</version>
	    </dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>org.apache.tomcat.embed</groupId>-->
<!--					<artifactId>tomcat-embed-websocket</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jjwt.version}</version>
		</dependency>

	</dependencies>

	<packaging>jar</packaging>
	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<profiles>
						<profile>dev</profile>
					</profiles>
				</configuration>
			</plugin>
		</plugins>
		<finalName>batch-api</finalName>

		<!-- RESOURCE -->
		<resources>
			<resource>
				<directory>${resource.directory}</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<activatedProperties>dev</activatedProperties>
				<!-- MySQL -->
				<datasource.type>DIRECT</datasource.type>
				<datasource.driver>com.mysql.jdbc.Driver</datasource.driver>
				<datasource.url>jdbc:mysql://host.docker.internal:6004/ONCODB?useUnicode=true&amp;createDatabaseIfNotExist=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Bangkok&amp;useSSL=false&amp;autoReconnect=true&amp;allowPublicKeyRetrieval=true</datasource.url>
				<datasource.username>ONCO</datasource.username>
				<datasource.password>+UJiVUL29Y3xjsLVnrVw7G6V7KW1Mw/t</datasource.password>
				<!-- <datasource.password>password</datasource.password> -->
				<!-- MongoDB -->
				<!-- Standard URI format: mongodb://[dbuser:dbpassword@]host:port/dbname -->
				<mongodb.uri>mongodb://host.docker.internal:6009/ONCDB02D</mongodb.uri>
				<mongodb.username>ONCO</mongodb.username>
				<mongodb.password>+UJiVUL29Y3xjsLVnrVw7G6V7KW1Mw/t</mongodb.password>
				<!-- Others -->
				<log.level>DEBUG</log.level>
				<log.file.path>/Users/neda/Personal/Work/Logs/ONCO</log.file.path>
				<data.file.path>/Users/neda/Personal/Work/Data</data.file.path>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<activatedProperties>prod</activatedProperties>
				<!-- MySQL -->
				<datasource.type>DIRECT</datasource.type>
				<datasource.driver>com.mysql.jdbc.Driver</datasource.driver>
				<datasource.url>jdbc:mysql://host.docker.internal:6004/ONCODB?useUnicode=true&amp;createDatabaseIfNotExist=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Bangkok&amp;useSSL=false&amp;autoReconnect=true&amp;allowPublicKeyRetrieval=true</datasource.url>
				<datasource.username>ONCO</datasource.username>
				<datasource.password>+UJiVUL29Y3xjsLVnrVw7G6V7KW1Mw/t</datasource.password>
				<!-- <datasource.password>password</datasource.password> -->
				<!-- MongoDB -->
				<mongodb.uri>mongodb://host.docker.internal:6009</mongodb.uri>
				<mongodb.username>ONCO</mongodb.username>
				<mongodb.password>+UJiVUL29Y3xjsLVnrVw7G6V7KW1Mw/t</mongodb.password>
				<!-- Others -->
				<log.level>DEBUG</log.level>
				<log.file.path>/app/logs</log.file.path>
				<data.file.path>/app/data/uploads</data.file.path>
			</properties>
		</profile>
	</profiles>
</project>
