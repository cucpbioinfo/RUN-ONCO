version: "3"

services:
  db:
    user: $UID
    restart: always
    build: ./onco-db
    image: onco-db
    container_name: onco-db
    platform: linux/x86_64
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: P@ssw0rd
      MYSQL_USER: ONCO
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: ONCODB
    volumes:
      - mysql_volume:/var/lib/mysql
    expose:
      - "3306"
    ports:
      - "6004:3306"
    # networks:
    #   - network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  anlys_api:
    user: $UID
    restart: always
    build: ./data-anlys-api
    image: data-anlys-api
    container_name: data-anlys-api
    platform: linux/x86_64
    expose:
      - "5000"
    ports:
      - "6005:5000"
    # networks:
    #   - network

  backend:
    user: $UID
    restart: always
    build: ./onco-api
    image: onco-api
    container_name: onco-api
    platform: linux/x86_64
    volumes:
      - data_volume:/app/data
      - log_volume:/app/logs
    expose:
      - "6006"
    ports:
      - "6006:11116"
    # networks:
    #   - network
    depends_on:
      db:
        condition: service_healthy
    links:
      - db:onco-db
    # healthcheck:
    #   test:
    #     ["CMD", "curl", "-f", "http://localhost:11116/onco-api/getAppVersion"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  batch:
    user: $UID
    restart: always
    build: ./batch
    image: onco-api-batch
    container_name: onco-api-batch
    platform: linux/x86_64
    volumes:
      - data_volume:/app/data
      - log_volume:/app/logs
    expose:
      - "11117"
    ports:
      - "6007:11117"
    # networks:
    #   - network
    depends_on:
      db:
        condition: service_healthy
    links:
      - db:onco-db

  web:
    restart: always
    build: ./onco-web
    image: onco-web
    container_name: onco-web
    platform: linux/x86_64
    expose:
      - "80"
    ports:
      - "6008:80"
    # networks:
    #   - network
    # depends_on:
    #   backend:
    #     condition: service_healthy
    links:
      - backend:onco-api
      - anlys_api:data-anlys-api

# networks:
#   network:
#     driver: bridge

volumes:
  mysql_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/shared/db/mysql-data"
  data_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/shared/data"
  log_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/shared/logs"
